% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_predictions.R
\name{aggregate_predictions}
\alias{aggregate_predictions}
\title{Aggregate predictions by sequence}
\usage{
aggregate_predictions(preds = NULL, sequences = NULL)
}
\arguments{
\item{preds}{dataframe of predictions provided by `deploy_model`}

\item{sequences}{sequence information for the dataset included in "preds". 
Must be either a column in preds, or a dataframe with corresponding image paths 
sequence ids. A separate dataframe must have two columns: a column containing the absolute path
to images in the dataset that matches the corresponding column in "preds", and a
column of sequence ids corresponding to each image. Such a dataframe can be created
using the function `generate_sequences` and selecting the appropriate columns.}
}
\value{
Returns a dataframe of predictions filtered down to the highest 
confidence prediction per class per sequence.
}
\description{
Apply sequence id to results from the `deploy_model` function to 
aggregate predictions to the sequence level.
}
\details{
If all predictions for a given sequence are "empty", the first image
prediction in the sequence will be retained. If a sequence has non-"empty" 
predictions, all "empty" predictions from that sequence will be removed. 
The function requires model output from the `deploy_model` function and sequence
information about the dataset. Sequences may be provided by the user or from the 
`generate_sequences` or `extract_metadata` functions.
}
\examples{

# with sequences in the same data frame as predictions
data(preds)
seq_preds <- generate_sequences(preds$filename, c("example_set"), 5, 300)
agg_preds <- aggregate_predictions(seq_preds, SequenceId) # directory-generated sequences
agg_preds <- aggregate_predictions(seq_preds, SeqNumber) # metadata-generated sequences

# with sequences as a separate data frame
data(preds)
meta_df <- extract_metadata(preds$filename)
# this will take the first sequence column in meta_df
agg_preds <- aggregate_predictions(preds, meta_df) 

}
