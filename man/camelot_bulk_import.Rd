% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/camelot_bulk_import.R
\name{camelot_bulk_import}
\alias{camelot_bulk_import}
\title{Camelot bulk import}
\usage{
camelot_bulk_import(df, project_df, CameraName, score_threshold)
}
\arguments{
\item{df}{output of CameraTrapDetectoR `deploy_model` function. The file_path column must match the local
paths to your images. If you did not extract image metadata while running the model, we will do that here.}

\item{project_df}{name of dataframe with required camelot fields.}

\item{CameraName}{required column in project_df corresponding to unique camera name, with one row per camera. This marker must correspond to a character substring
of the filename in your CameraTrapDetectoR model output.}

\item{score_threshold}{recode any predictions below score threshold as empty.
Takes values between 0 and 1. Default is not to adjust any predictions}
}
\value{
data frame formatted for import to Camelot
}
\description{
Format CameraTrapDetectoR results for bulk import into Camelot
image tagging software: https://camelotproject.org/
}
\details{
The user may include the following information in \code{project_df}:  
     `Latitude` : column corresponding to camera latitude. If not included, we will create a dummy column that will allow uploading to Camelot but cannot be used in analysis.
     `Longitude` : column corresponding to camera longitude. If not included, we will create a dummy column that will allow uploading to Camelot but cannot be used in analysis.
     `TrapStation` : column corresponding to camera trap station name, with a maximum two cameras per trap station. This field is useful for multiple perspectives of the same view. 
     If not provided, we will create a dummy column defaulting to `Camera_Name`.
     `StartDate` : column corresponding to start date for each camera. If not provided, we will extract this info from image metadata.
     `EndDate` : column corresponding to end date for each camera. If not provided, we will extract this info from image metadata.
}
